TODO :
- fops : open, read, write

	=> array flags, parse entries to get ascii value, ks->ascii, delay
	=> look timedelay.h
	=> kern log, print all

- how to protect against flow to big/to fast

=> HARDENING (memleaks, unregister, fast, unvalid reference, ...)

- QUESTIONS 

Apple keyboard est affiche en tant que peripherique usb. Comment se fait-il qu il soit affiche sur IRQ 1 / x60 etant donne qu il n est pas PS/2
 emulation au niveau de l uefi/linux

- Does interrupts frome the line  are on a sequential timeline ?
- Does it legitimate to disable interrupt why reading a spinlocked structure ?


- Kernel preemption
- Interrupts
- Exceptions
- Lock & Concurrency


ARCHI :
		Interrupt -> [scan_array] -> Tasklet
						|
Key SM ~tmp_log <- [keystroke_list] <- Make/Break State Machine 
   |			|
buffer tmp	Key State Machine ~final_log
			|
		   buffer exit


inode
	-> cdev
		-> my device

misc_dev ?


GWOJDA:
- key set 1, cmd ?
- detect the tty ?


dissociation CPU time/flow of execution
